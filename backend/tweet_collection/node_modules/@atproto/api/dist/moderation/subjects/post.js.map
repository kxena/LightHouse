{"version":3,"file":"post.js","sourceRoot":"","sources":["../../../src/moderation/subjects/post.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AppBskyActorDefs,\n  AppBskyEmbedExternal,\n  AppBskyEmbedImages,\n  AppBskyEmbedRecord,\n  AppBskyEmbedRecordWithMedia,\n  AppBskyFeedPost,\n} from '../../client'\nimport { $Typed } from '../../client/util'\nimport { ModerationDecision } from '../decision'\nimport { MuteWordMatch, matchMuteWords } from '../mutewords'\nimport { ModerationOpts, ModerationSubjectPost } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decidePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return ModerationDecision.merge(\n    decideSubject(subject, opts),\n    decideEmbed(subject.embed, opts)?.downgrade(),\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n\nfunction decideSubject(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  acc.addHidden(checkHiddenPost(subject, opts.prefs.hiddenPosts))\n  if (!acc.isMe) {\n    acc.addMutedWord(matchAllMuteWords(subject, opts.prefs.mutedWords))\n  }\n\n  return acc\n}\n\nfunction decideEmbed(\n  embed:\n    | undefined\n    | $Typed<AppBskyEmbedRecord.View>\n    | $Typed<AppBskyEmbedRecordWithMedia.View>\n    | { $type: string },\n  opts: ModerationOpts,\n) {\n  if (embed) {\n    if (\n      (AppBskyEmbedRecord.isView(embed) ||\n        AppBskyEmbedRecordWithMedia.isView(embed)) &&\n      AppBskyEmbedRecord.isViewRecord(embed.record)\n    ) {\n      // quote post\n      return decideQuotedPost(embed.record, opts)\n    } else if (\n      AppBskyEmbedRecordWithMedia.isView(embed) &&\n      AppBskyEmbedRecord.isViewRecord(embed.record.record)\n    ) {\n      // quoted post with media\n      return decideQuotedPost(embed.record.record, opts)\n    } else if (\n      (AppBskyEmbedRecord.isView(embed) ||\n        AppBskyEmbedRecordWithMedia.isView(embed)) &&\n      AppBskyEmbedRecord.isViewBlocked(embed.record)\n    ) {\n      // blocked quote post\n      return decideBlockedQuotedPost(embed.record, opts)\n    } else if (\n      AppBskyEmbedRecordWithMedia.isView(embed) &&\n      AppBskyEmbedRecord.isViewBlocked(embed.record.record)\n    ) {\n      // blocked quoted post with media\n      return decideBlockedQuotedPost(embed.record.record, opts)\n    }\n  }\n\n  return undefined\n}\n\nfunction decideQuotedPost(\n  subject: AppBskyEmbedRecord.ViewRecord,\n  opts: ModerationOpts,\n) {\n  const acc = new ModerationDecision()\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n\nfunction decideBlockedQuotedPost(\n  subject: AppBskyEmbedRecord.ViewBlocked,\n  opts: ModerationOpts,\n) {\n  const acc = new ModerationDecision()\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.author.viewer?.muted) {\n    if (subject.author.viewer?.mutedByList) {\n      acc.addMutedByList(subject.author.viewer?.mutedByList)\n    } else {\n      acc.addMuted(subject.author.viewer?.muted)\n    }\n  }\n  if (subject.author.viewer?.blocking) {\n    if (subject.author.viewer?.blockingByList) {\n      acc.addBlockingByList(subject.author.viewer?.blockingByList)\n    } else {\n      acc.addBlocking(subject.author.viewer?.blocking)\n    }\n  }\n  acc.addBlockedBy(subject.author.viewer?.blockedBy)\n  return acc\n}\n\nfunction checkHiddenPost(\n  subject: ModerationSubjectPost,\n  hiddenPosts: string[] | undefined,\n) {\n  if (!hiddenPosts?.length) {\n    return false\n  }\n  if (hiddenPosts.includes(subject.uri)) {\n    return true\n  }\n  if (subject.embed) {\n    if (\n      AppBskyEmbedRecord.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record) &&\n      hiddenPosts.includes(subject.embed.record.uri)\n    ) {\n      return true\n    }\n    if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record.record) &&\n      hiddenPosts.includes(subject.embed.record.record.uri)\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction matchAllMuteWords(\n  subject: ModerationSubjectPost,\n  mutedWords: AppBskyActorDefs.MutedWord[] | undefined,\n): MuteWordMatch[] | undefined {\n  if (!mutedWords?.length) {\n    return\n  }\n\n  const postAuthor = subject.author\n\n  if (AppBskyFeedPost.isRecord(subject.record)) {\n    const post = subject.record as AppBskyFeedPost.Record\n\n    const matches = matchMuteWords({\n      mutedWords,\n      text: post.text,\n      facets: post.facets,\n      outlineTags: post.tags,\n      languages: post.langs,\n      actor: postAuthor,\n    })\n    // post text\n    if (matches) {\n      return matches\n    }\n\n    if (post.embed && AppBskyEmbedImages.isMain(post.embed)) {\n      // post images\n      for (const image of post.embed.images) {\n        const matches = matchMuteWords({\n          mutedWords,\n          text: image.alt,\n          languages: post.langs,\n          actor: postAuthor,\n        })\n        if (matches) {\n          return matches\n        }\n      }\n    }\n  }\n\n  const { embed } = subject\n  if (embed) {\n    // quote post\n    if (\n      (AppBskyEmbedRecord.isView(embed) ||\n        AppBskyEmbedRecordWithMedia.isView(embed)) &&\n      AppBskyEmbedRecord.isViewRecord(embed.record)\n    ) {\n      if (AppBskyFeedPost.isRecord(embed.record.value)) {\n        const embeddedPost = embed.record.value as AppBskyFeedPost.Record\n        const embedAuthor = embed.record.author\n        const matches = matchMuteWords({\n          mutedWords,\n          text: embeddedPost.text,\n          facets: embeddedPost.facets,\n          outlineTags: embeddedPost.tags,\n          languages: embeddedPost.langs,\n          actor: embedAuthor,\n        })\n\n        // quoted post text\n        if (matches) {\n          return matches\n        }\n\n        // quoted post's images\n        if (AppBskyEmbedImages.isMain(embeddedPost.embed)) {\n          for (const image of embeddedPost.embed.images) {\n            const matches = matchMuteWords({\n              mutedWords,\n              text: image.alt,\n              languages: embeddedPost.langs,\n              actor: embedAuthor,\n            })\n            if (matches) {\n              return matches\n            }\n          }\n        }\n\n        // quoted post's link card\n        if (AppBskyEmbedExternal.isMain(embeddedPost.embed)) {\n          const { external } = embeddedPost.embed\n          const matches = matchMuteWords({\n            mutedWords,\n            text: external.title + ' ' + external.description,\n            languages: [],\n            actor: embedAuthor,\n          })\n          if (matches) {\n            return matches\n          }\n        }\n\n        if (AppBskyEmbedRecordWithMedia.isMain(embeddedPost.embed)) {\n          // quoted post's link card when it did a quote + media\n          if (AppBskyEmbedExternal.isMain(embeddedPost.embed.media)) {\n            const { external } = embeddedPost.embed.media\n            const matches = matchMuteWords({\n              mutedWords,\n              text: external.title + ' ' + external.description,\n              languages: [],\n              actor: embedAuthor,\n            })\n            if (matches) {\n              return matches\n            }\n          }\n\n          // quoted post's images when it did a quote + media\n          if (AppBskyEmbedImages.isMain(embeddedPost.embed.media)) {\n            for (const image of embeddedPost.embed.media.images) {\n              const matches = matchMuteWords({\n                mutedWords,\n                text: image.alt,\n                languages: AppBskyFeedPost.isRecord(embeddedPost.record)\n                  ? embeddedPost.langs\n                  : [],\n                actor: embedAuthor,\n              })\n              if (matches) {\n                return matches\n              }\n            }\n          }\n        }\n      }\n    }\n    // link card\n    else if (AppBskyEmbedExternal.isView(embed)) {\n      const { external } = embed\n      const matches = matchMuteWords({\n        mutedWords,\n        text: external.title + ' ' + external.description,\n        languages: [],\n        actor: postAuthor,\n      })\n      if (matches) {\n        return matches\n      }\n    }\n    // quote post with media\n    else if (\n      AppBskyEmbedRecordWithMedia.isView(embed) &&\n      AppBskyEmbedRecord.isViewRecord(embed.record.record)\n    ) {\n      const embedAuthor = embed.record.record.author\n\n      // quoted post text\n      if (AppBskyFeedPost.isRecord(embed.record.record.value)) {\n        const post = embed.record.record.value as AppBskyFeedPost.Record\n        const matches = matchMuteWords({\n          mutedWords,\n          text: post.text,\n          facets: post.facets,\n          outlineTags: post.tags,\n          languages: post.langs,\n          actor: embedAuthor,\n        })\n        if (matches) {\n          return matches\n        }\n      }\n\n      // quoted post images\n      if (AppBskyEmbedImages.isView(embed.media)) {\n        for (const image of embed.media.images) {\n          const matches = matchMuteWords({\n            mutedWords,\n            text: image.alt,\n            languages: AppBskyFeedPost.isRecord(subject.record)\n              ? (subject.record as AppBskyFeedPost.Record).langs\n              : [],\n            actor: embedAuthor,\n          })\n          if (matches) {\n            return matches\n          }\n        }\n      }\n\n      if (AppBskyEmbedExternal.isView(embed.media)) {\n        const { external } = embed.media\n        const matches = matchMuteWords({\n          mutedWords,\n          text: external.title + ' ' + external.description,\n          languages: [],\n          actor: embedAuthor,\n        })\n        if (matches) {\n          return matches\n        }\n      }\n    }\n  }\n}\n"]}