{"version":3,"file":"user-list.js","sourceRoot":"","sources":["../../../src/moderation/subjects/user-list.ts"],"names":[],"mappings":";;AAOA,wCAoCC;AA3CD,4CAAuC;AAEvC,0CAAgD;AAEhD,uCAAyC;AACzC,uCAAyC;AAEzC,SAAgB,cAAc,CAC5B,OAAkC,EAClC,IAAoB;IAEpB,MAAM,GAAG,GAAG,IAAI,6BAAkB,EAAE,CAAA;IAEpC,MAAM,OAAO;IACX,sFAAsF;IACtF,SAAS,IAAI,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC;QAChD,CAAC,CAAC,OAAO,CAAC,OAAO;QACjB,CAAC,CAAC,SAAS,CAAA;IAEf,IAAI,OAAO,EAAE,CAAC;QACZ,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;QACvB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,CAAA;QACzC,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;YAC3B,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;gBACnC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;YACtC,CAAC;QACH,CAAC;QACD,OAAO,6BAAkB,CAAC,KAAK,CAC7B,GAAG,EACH,IAAA,uBAAa,EAAC,OAAO,EAAE,IAAI,CAAC,EAC5B,IAAA,uBAAa,EAAC,OAAO,EAAE,IAAI,CAAC,CAC7B,CAAA;IACH,CAAC;IAED,MAAM,UAAU,GAAG,IAAI,cAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAA;IAClD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;IACtB,GAAG,CAAC,OAAO,CAAC,UAAU,KAAK,IAAI,CAAC,OAAO,CAAC,CAAA;IACxC,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;QAC3B,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;YACnC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;QACtC,CAAC;IACH,CAAC;IACD,OAAO,GAAG,CAAA;AACZ,CAAC;AAED,SAAS,SAAS,CAAC,CAAM;IACvB,OAAO,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAA;AACjD,CAAC","sourcesContent":["import { AtUri } from '@atproto/syntax'\nimport { AppBskyActorDefs } from '../../client/index'\nimport { ModerationDecision } from '../decision'\nimport { ModerationOpts, ModerationSubjectUserList } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideUserList(\n  subject: ModerationSubjectUserList,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  const creator =\n    // Note: ListViewBasic should not contain a creator field, but let's support it anyway\n    'creator' in subject && isProfile(subject.creator)\n      ? subject.creator\n      : undefined\n\n  if (creator) {\n    acc.setDid(creator.did)\n    acc.setIsMe(creator.did === opts.userDid)\n    if (subject.labels?.length) {\n      for (const label of subject.labels) {\n        acc.addLabel('content', label, opts)\n      }\n    }\n    return ModerationDecision.merge(\n      acc,\n      decideAccount(creator, opts),\n      decideProfile(creator, opts),\n    )\n  }\n\n  const creatorDid = new AtUri(subject.uri).hostname\n  acc.setDid(creatorDid)\n  acc.setIsMe(creatorDid === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return acc\n}\n\nfunction isProfile(v: any): v is AppBskyActorDefs.ProfileViewBasic {\n  return v && typeof v === 'object' && 'did' in v\n}\n"]}