{"version":3,"file":"defs.js","sourceRoot":"","sources":["../../../../../../src/client/types/tools/ozone/set/defs.ts"],"names":[],"mappings":";;AAwBA,sBAEC;AAED,kCAEC;AAaD,8BAEC;AAED,0CAEC;AA5CD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,sBAAsB,CAAA;AAQjC,MAAM,OAAO,GAAG,KAAK,CAAA;AAErB,SAAgB,KAAK,CAAI,CAAI;IAC3B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,CAAA;AACjC,CAAC;AAED,SAAgB,WAAW,CAAI,CAAI;IACjC,OAAO,QAAQ,CAAU,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,CAAA;AAC1C,CAAC;AAWD,MAAM,WAAW,GAAG,SAAS,CAAA;AAE7B,SAAgB,SAAS,CAAI,CAAI;IAC/B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,CAAA;AACrC,CAAC;AAED,SAAgB,eAAe,CAAI,CAAI;IACrC,OAAO,QAAQ,CAAc,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,CAAA;AAClD,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.set.defs'\n\nexport interface Set {\n  $type?: 'tools.ozone.set.defs#set'\n  name: string\n  description?: string\n}\n\nconst hashSet = 'set'\n\nexport function isSet<V>(v: V) {\n  return is$typed(v, id, hashSet)\n}\n\nexport function validateSet<V>(v: V) {\n  return validate<Set & V>(v, id, hashSet)\n}\n\nexport interface SetView {\n  $type?: 'tools.ozone.set.defs#setView'\n  name: string\n  description?: string\n  setSize: number\n  createdAt: string\n  updatedAt: string\n}\n\nconst hashSetView = 'setView'\n\nexport function isSetView<V>(v: V) {\n  return is$typed(v, id, hashSetView)\n}\n\nexport function validateSetView<V>(v: V) {\n  return validate<SetView & V>(v, id, hashSetView)\n}\n"]}