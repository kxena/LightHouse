{"version":3,"file":"listNotifications.js","sourceRoot":"","sources":["../../../../../../src/client/types/app/bsky/notification/listNotifications.ts"],"names":[],"mappings":";;AA+CA,gCAEC;AA+BD,wCAEC;AAED,oDAEC;AAhFD,mDAA4D;AAC5D,2CAIyB;AAIzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,yCAAyC,CAAA;AA8BpD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AA6BD,MAAM,gBAAgB,GAAG,cAAc,CAAA;AAEvC,SAAgB,cAAc,CAAI,CAAI;IACpC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,gBAAgB,CAAC,CAAA;AAC1C,CAAC;AAED,SAAgB,oBAAoB,CAAI,CAAI;IAC1C,OAAO,QAAQ,CAAmB,CAAC,EAAE,EAAE,EAAE,gBAAgB,CAAC,CAAA;AAC5D,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.notification.listNotifications'\n\nexport type QueryParams = {\n  /** Notification reasons to include in response. */\n  reasons?: string[]\n  limit?: number\n  priority?: boolean\n  cursor?: string\n  seenAt?: string\n}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  notifications: Notification[]\n  priority?: boolean\n  seenAt?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Notification {\n  $type?: 'app.bsky.notification.listNotifications#notification'\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileView\n  /** The reason why this notification was delivered - e.g. your post was liked, or you received a new follower. */\n  reason:\n    | 'like'\n    | 'repost'\n    | 'follow'\n    | 'mention'\n    | 'reply'\n    | 'quote'\n    | 'starterpack-joined'\n    | 'verified'\n    | 'unverified'\n    | 'like-via-repost'\n    | 'repost-via-repost'\n    | 'subscribed-post'\n    | (string & {})\n  reasonSubject?: string\n  record: { [_ in string]: unknown }\n  isRead: boolean\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n}\n\nconst hashNotification = 'notification'\n\nexport function isNotification<V>(v: V) {\n  return is$typed(v, id, hashNotification)\n}\n\nexport function validateNotification<V>(v: V) {\n  return validate<Notification & V>(v, id, hashNotification)\n}\n"]}