{"version":3,"file":"getConfig.js","sourceRoot":"","sources":["../../../../../../src/client/types/app/bsky/unspecced/getConfig.ts"],"names":[],"mappings":";;AAoCA,gCAEC;AAUD,0CAEC;AAED,sDAEC;AAhDD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,8BAA8B,CAAA;AAqBzC,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,MAAM,iBAAiB,GAAG,eAAe,CAAA;AAEzC,SAAgB,eAAe,CAAI,CAAI;IACrC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAA;AAC3C,CAAC;AAED,SAAgB,qBAAqB,CAAI,CAAI;IAC3C,OAAO,QAAQ,CAAoB,CAAC,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAA;AAC9D,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.getConfig'\n\nexport type QueryParams = {}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  checkEmailConfirmed?: boolean\n  liveNow?: LiveNowConfig[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface LiveNowConfig {\n  $type?: 'app.bsky.unspecced.getConfig#liveNowConfig'\n  did: string\n  domains: string[]\n}\n\nconst hashLiveNowConfig = 'liveNowConfig'\n\nexport function isLiveNowConfig<V>(v: V) {\n  return is$typed(v, id, hashLiveNowConfig)\n}\n\nexport function validateLiveNowConfig<V>(v: V) {\n  return validate<LiveNowConfig & V>(v, id, hashLiveNowConfig)\n}\n"]}