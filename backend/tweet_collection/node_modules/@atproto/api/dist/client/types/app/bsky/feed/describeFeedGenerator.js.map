{"version":3,"file":"describeFeedGenerator.js","sourceRoot":"","sources":["../../../../../../src/client/types/app/bsky/feed/describeFeedGenerator.ts"],"names":[],"mappings":";;AAqCA,gCAEC;AASD,wBAEC;AAED,oCAEC;AAUD,0BAEC;AAED,sCAEC;AAhED,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,qCAAqC,CAAA;AAsBhD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAOD,MAAM,QAAQ,GAAG,MAAM,CAAA;AAEvB,SAAgB,MAAM,CAAI,CAAI;IAC5B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAA;AAClC,CAAC;AAED,SAAgB,YAAY,CAAI,CAAI;IAClC,OAAO,QAAQ,CAAW,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAA;AAC5C,CAAC;AAQD,MAAM,SAAS,GAAG,OAAO,CAAA;AAEzB,SAAgB,OAAO,CAAI,CAAI;IAC7B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,CAAA;AACnC,CAAC;AAED,SAAgB,aAAa,CAAI,CAAI;IACnC,OAAO,QAAQ,CAAY,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,CAAA;AAC9C,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.describeFeedGenerator'\n\nexport type QueryParams = {}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  feeds: Feed[]\n  links?: Links\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Feed {\n  $type?: 'app.bsky.feed.describeFeedGenerator#feed'\n  uri: string\n}\n\nconst hashFeed = 'feed'\n\nexport function isFeed<V>(v: V) {\n  return is$typed(v, id, hashFeed)\n}\n\nexport function validateFeed<V>(v: V) {\n  return validate<Feed & V>(v, id, hashFeed)\n}\n\nexport interface Links {\n  $type?: 'app.bsky.feed.describeFeedGenerator#links'\n  privacyPolicy?: string\n  termsOfService?: string\n}\n\nconst hashLinks = 'links'\n\nexport function isLinks<V>(v: V) {\n  return is$typed(v, id, hashLinks)\n}\n\nexport function validateLinks<V>(v: V) {\n  return validate<Links & V>(v, id, hashLinks)\n}\n"]}