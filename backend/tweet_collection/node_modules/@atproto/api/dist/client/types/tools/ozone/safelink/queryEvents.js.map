{"version":3,"file":"queryEvents.js","sourceRoot":"","sources":["../../../../../../src/client/types/tools/ozone/safelink/queryEvents.ts"],"names":[],"mappings":";;AAoDA,gCAEC;AAhDD,mDAA4D;AAC5D,2CAIyB;AAGzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,kCAAkC,CAAA;AAoC7C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as ToolsOzoneSafelinkDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.safelink.queryEvents'\n\nexport type QueryParams = {}\n\nexport interface InputSchema {\n  /** Cursor for pagination */\n  cursor?: string\n  /** Maximum number of results to return */\n  limit?: number\n  /** Filter by specific URLs or domains */\n  urls?: string[]\n  /** Filter by pattern type */\n  patternType?: string\n  /** Sort direction */\n  sortDirection?: 'asc' | 'desc' | (string & {})\n}\n\nexport interface OutputSchema {\n  /** Next cursor for pagination. Only present if there are more results. */\n  cursor?: string\n  events: ToolsOzoneSafelinkDefs.Event[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"]}