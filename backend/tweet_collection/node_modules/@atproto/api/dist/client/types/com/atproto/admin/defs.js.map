{"version":3,"file":"defs.js","sourceRoot":"","sources":["../../../../../../src/client/types/com/atproto/admin/defs.ts"],"names":[],"mappings":";;AAyBA,oCAEC;AAED,gDAEC;AAoBD,sCAEC;AAED,kDAEC;AASD,8BAEC;AAED,0CAEC;AAWD,sCAEC;AAED,kDAEC;AAUD,8CAEC;AAED,0DAEC;AApGD,mDAA4D;AAC5D,2CAIyB;AAGzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,wBAAwB,CAAA;AAQnC,MAAM,cAAc,GAAG,YAAY,CAAA;AAEnC,SAAgB,YAAY,CAAI,CAAI;IAClC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,cAAc,CAAC,CAAA;AACxC,CAAC;AAED,SAAgB,kBAAkB,CAAI,CAAI;IACxC,OAAO,QAAQ,CAAiB,CAAC,EAAE,EAAE,EAAE,cAAc,CAAC,CAAA;AACxD,CAAC;AAkBD,MAAM,eAAe,GAAG,aAAa,CAAA;AAErC,SAAgB,aAAa,CAAI,CAAI;IACnC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,eAAe,CAAC,CAAA;AACzC,CAAC;AAED,SAAgB,mBAAmB,CAAI,CAAI;IACzC,OAAO,QAAQ,CAAkB,CAAC,EAAE,EAAE,EAAE,eAAe,CAAC,CAAA;AAC1D,CAAC;AAOD,MAAM,WAAW,GAAG,SAAS,CAAA;AAE7B,SAAgB,SAAS,CAAI,CAAI;IAC/B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,CAAA;AACrC,CAAC;AAED,SAAgB,eAAe,CAAI,CAAI;IACrC,OAAO,QAAQ,CAAc,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,CAAA;AAClD,CAAC;AASD,MAAM,eAAe,GAAG,aAAa,CAAA;AAErC,SAAgB,aAAa,CAAI,CAAI;IACnC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,eAAe,CAAC,CAAA;AACzC,CAAC;AAED,SAAgB,mBAAmB,CAAI,CAAI;IACzC,OAAO,QAAQ,CAAkB,CAAC,EAAE,EAAE,EAAE,eAAe,CAAC,CAAA;AAC1D,CAAC;AAQD,MAAM,mBAAmB,GAAG,iBAAiB,CAAA;AAE7C,SAAgB,iBAAiB,CAAI,CAAI;IACvC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,mBAAmB,CAAC,CAAA;AAC7C,CAAC;AAED,SAAgB,uBAAuB,CAAI,CAAI;IAC7C,OAAO,QAAQ,CAAsB,CAAC,EAAE,EAAE,EAAE,mBAAmB,CAAC,CAAA;AAClE,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as ComAtprotoServerDefs from '../server/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.defs'\n\nexport interface StatusAttr {\n  $type?: 'com.atproto.admin.defs#statusAttr'\n  applied: boolean\n  ref?: string\n}\n\nconst hashStatusAttr = 'statusAttr'\n\nexport function isStatusAttr<V>(v: V) {\n  return is$typed(v, id, hashStatusAttr)\n}\n\nexport function validateStatusAttr<V>(v: V) {\n  return validate<StatusAttr & V>(v, id, hashStatusAttr)\n}\n\nexport interface AccountView {\n  $type?: 'com.atproto.admin.defs#accountView'\n  did: string\n  handle: string\n  email?: string\n  relatedRecords?: { [_ in string]: unknown }[]\n  indexedAt: string\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  emailConfirmedAt?: string\n  inviteNote?: string\n  deactivatedAt?: string\n  threatSignatures?: ThreatSignature[]\n}\n\nconst hashAccountView = 'accountView'\n\nexport function isAccountView<V>(v: V) {\n  return is$typed(v, id, hashAccountView)\n}\n\nexport function validateAccountView<V>(v: V) {\n  return validate<AccountView & V>(v, id, hashAccountView)\n}\n\nexport interface RepoRef {\n  $type?: 'com.atproto.admin.defs#repoRef'\n  did: string\n}\n\nconst hashRepoRef = 'repoRef'\n\nexport function isRepoRef<V>(v: V) {\n  return is$typed(v, id, hashRepoRef)\n}\n\nexport function validateRepoRef<V>(v: V) {\n  return validate<RepoRef & V>(v, id, hashRepoRef)\n}\n\nexport interface RepoBlobRef {\n  $type?: 'com.atproto.admin.defs#repoBlobRef'\n  did: string\n  cid: string\n  recordUri?: string\n}\n\nconst hashRepoBlobRef = 'repoBlobRef'\n\nexport function isRepoBlobRef<V>(v: V) {\n  return is$typed(v, id, hashRepoBlobRef)\n}\n\nexport function validateRepoBlobRef<V>(v: V) {\n  return validate<RepoBlobRef & V>(v, id, hashRepoBlobRef)\n}\n\nexport interface ThreatSignature {\n  $type?: 'com.atproto.admin.defs#threatSignature'\n  property: string\n  value: string\n}\n\nconst hashThreatSignature = 'threatSignature'\n\nexport function isThreatSignature<V>(v: V) {\n  return is$typed(v, id, hashThreatSignature)\n}\n\nexport function validateThreatSignature<V>(v: V) {\n  return validate<ThreatSignature & V>(v, id, hashThreatSignature)\n}\n"]}