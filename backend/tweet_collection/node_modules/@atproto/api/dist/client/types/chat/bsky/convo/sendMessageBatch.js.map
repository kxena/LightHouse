{"version":3,"file":"sendMessageBatch.js","sourceRoot":"","sources":["../../../../../../src/client/types/chat/bsky/convo/sendMessageBatch.ts"],"names":[],"mappings":";;AAyCA,gCAEC;AAUD,kCAEC;AAED,8CAEC;AArDD,mDAA4D;AAC5D,2CAIyB;AAGzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,kCAAkC,CAAA;AAyB7C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,MAAM,aAAa,GAAG,WAAW,CAAA;AAEjC,SAAgB,WAAW,CAAI,CAAI;IACjC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,CAAA;AACvC,CAAC;AAED,SAAgB,iBAAiB,CAAI,CAAI;IACvC,OAAO,QAAQ,CAAgB,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,CAAA;AACtD,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.sendMessageBatch'\n\nexport type QueryParams = {}\n\nexport interface InputSchema {\n  items: BatchItem[]\n}\n\nexport interface OutputSchema {\n  items: ChatBskyConvoDefs.MessageView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface BatchItem {\n  $type?: 'chat.bsky.convo.sendMessageBatch#batchItem'\n  convoId: string\n  message: ChatBskyConvoDefs.MessageInput\n}\n\nconst hashBatchItem = 'batchItem'\n\nexport function isBatchItem<V>(v: V) {\n  return is$typed(v, id, hashBatchItem)\n}\n\nexport function validateBatchItem<V>(v: V) {\n  return validate<BatchItem & V>(v, id, hashBatchItem)\n}\n"]}