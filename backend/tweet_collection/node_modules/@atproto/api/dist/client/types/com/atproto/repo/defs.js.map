{"version":3,"file":"defs.js","sourceRoot":"","sources":["../../../../../../src/client/types/com/atproto/repo/defs.ts"],"names":[],"mappings":";;AAwBA,oCAEC;AAED,gDAEC;AAzBD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,uBAAuB,CAAA;AAQlC,MAAM,cAAc,GAAG,YAAY,CAAA;AAEnC,SAAgB,YAAY,CAAI,CAAI;IAClC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,cAAc,CAAC,CAAA;AACxC,CAAC;AAED,SAAgB,kBAAkB,CAAI,CAAI;IACxC,OAAO,QAAQ,CAAiB,CAAC,EAAE,EAAE,EAAE,cAAc,CAAC,CAAA;AACxD,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.defs'\n\nexport interface CommitMeta {\n  $type?: 'com.atproto.repo.defs#commitMeta'\n  cid: string\n  rev: string\n}\n\nconst hashCommitMeta = 'commitMeta'\n\nexport function isCommitMeta<V>(v: V) {\n  return is$typed(v, id, hashCommitMeta)\n}\n\nexport function validateCommitMeta<V>(v: V) {\n  return validate<CommitMeta & V>(v, id, hashCommitMeta)\n}\n"]}