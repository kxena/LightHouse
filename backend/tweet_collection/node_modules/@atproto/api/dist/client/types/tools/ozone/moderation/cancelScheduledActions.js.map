{"version":3,"file":"cancelScheduledActions.js","sourceRoot":"","sources":["../../../../../../src/client/types/tools/ozone/moderation/cancelScheduledActions.ts"],"names":[],"mappings":";;AAyCA,gCAEC;AAYD,sDAEC;AAED,kEAEC;AAWD,oDAEC;AAED,gEAEC;AAxED,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,+CAA+C,CAAA;AA0B1D,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAUD,MAAM,uBAAuB,GAAG,qBAAqB,CAAA;AAErD,SAAgB,qBAAqB,CAAI,CAAI;IAC3C,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAA;AACjD,CAAC;AAED,SAAgB,2BAA2B,CAAI,CAAI;IACjD,OAAO,QAAQ,CAA0B,CAAC,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAA;AAC1E,CAAC;AASD,MAAM,sBAAsB,GAAG,oBAAoB,CAAA;AAEnD,SAAgB,oBAAoB,CAAI,CAAI;IAC1C,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAA;AAChD,CAAC;AAED,SAAgB,0BAA0B,CAAI,CAAI;IAChD,OAAO,QAAQ,CAAyB,CAAC,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAA;AACxE,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.cancelScheduledActions'\n\nexport type QueryParams = {}\n\nexport interface InputSchema {\n  /** Array of DID subjects to cancel scheduled actions for */\n  subjects: string[]\n  /** Optional comment describing the reason for cancellation */\n  comment?: string\n}\n\nexport type OutputSchema = CancellationResults\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface CancellationResults {\n  $type?: 'tools.ozone.moderation.cancelScheduledActions#cancellationResults'\n  /** DIDs for which all pending scheduled actions were successfully cancelled */\n  succeeded: string[]\n  /** DIDs for which cancellation failed with error details */\n  failed: FailedCancellation[]\n}\n\nconst hashCancellationResults = 'cancellationResults'\n\nexport function isCancellationResults<V>(v: V) {\n  return is$typed(v, id, hashCancellationResults)\n}\n\nexport function validateCancellationResults<V>(v: V) {\n  return validate<CancellationResults & V>(v, id, hashCancellationResults)\n}\n\nexport interface FailedCancellation {\n  $type?: 'tools.ozone.moderation.cancelScheduledActions#failedCancellation'\n  did: string\n  error: string\n  errorCode?: string\n}\n\nconst hashFailedCancellation = 'failedCancellation'\n\nexport function isFailedCancellation<V>(v: V) {\n  return is$typed(v, id, hashFailedCancellation)\n}\n\nexport function validateFailedCancellation<V>(v: V) {\n  return validate<FailedCancellation & V>(v, id, hashFailedCancellation)\n}\n"]}