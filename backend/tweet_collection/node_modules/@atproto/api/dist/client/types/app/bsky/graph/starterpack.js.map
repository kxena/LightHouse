{"version":3,"file":"starterpack.js","sourceRoot":"","sources":["../../../../../../src/client/types/app/bsky/graph/starterpack.ts"],"names":[],"mappings":";;AAgCA,4BAEC;AAED,wCAEC;AASD,gCAEC;AAED,4CAEC;AAhDD,mDAA4D;AAC5D,2CAIyB;AAGzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,4BAA4B,CAAA;AAevC,MAAM,UAAU,GAAG,MAAM,CAAA;AAEzB,SAAgB,QAAQ,CAAI,CAAI;IAC9B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,CAAA;AACpC,CAAC;AAED,SAAgB,cAAc,CAAI,CAAI;IACpC,OAAO,QAAQ,CAAa,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,CAAA;AACtD,CAAC;AAOD,MAAM,YAAY,GAAG,UAAU,CAAA;AAE/B,SAAgB,UAAU,CAAI,CAAI;IAChC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,YAAY,CAAC,CAAA;AACtC,CAAC;AAED,SAAgB,gBAAgB,CAAI,CAAI;IACtC,OAAO,QAAQ,CAAe,CAAC,EAAE,EAAE,EAAE,YAAY,CAAC,CAAA;AACpD,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as AppBskyRichtextFacet from '../richtext/facet.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.starterpack'\n\nexport interface Record {\n  $type: 'app.bsky.graph.starterpack'\n  /** Display name for starter pack; can not be empty. */\n  name: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  /** Reference (AT-URI) to the list record. */\n  list: string\n  feeds?: FeedItem[]\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n\nexport interface FeedItem {\n  $type?: 'app.bsky.graph.starterpack#feedItem'\n  uri: string\n}\n\nconst hashFeedItem = 'feedItem'\n\nexport function isFeedItem<V>(v: V) {\n  return is$typed(v, id, hashFeedItem)\n}\n\nexport function validateFeedItem<V>(v: V) {\n  return validate<FeedItem & V>(v, id, hashFeedItem)\n}\n"]}