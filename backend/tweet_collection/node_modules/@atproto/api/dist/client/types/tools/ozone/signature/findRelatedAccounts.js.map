{"version":3,"file":"findRelatedAccounts.js","sourceRoot":"","sources":["../../../../../../src/client/types/tools/ozone/signature/findRelatedAccounts.ts"],"names":[],"mappings":";;AA0CA,gCAEC;AAUD,4CAEC;AAED,wDAEC;AAtDD,mDAA4D;AAC5D,2CAIyB;AAIzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,2CAA2C,CAAA;AAyBtD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,MAAM,kBAAkB,GAAG,gBAAgB,CAAA;AAE3C,SAAgB,gBAAgB,CAAI,CAAI;IACtC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAA;AAC5C,CAAC;AAED,SAAgB,sBAAsB,CAAI,CAAI;IAC5C,OAAO,QAAQ,CAAqB,CAAC,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAA;AAChE,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs.js'\nimport type * as ToolsOzoneSignatureDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.signature.findRelatedAccounts'\n\nexport type QueryParams = {\n  did: string\n  cursor?: string\n  limit?: number\n}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  accounts: RelatedAccount[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface RelatedAccount {\n  $type?: 'tools.ozone.signature.findRelatedAccounts#relatedAccount'\n  account: ComAtprotoAdminDefs.AccountView\n  similarities?: ToolsOzoneSignatureDefs.SigDetail[]\n}\n\nconst hashRelatedAccount = 'relatedAccount'\n\nexport function isRelatedAccount<V>(v: V) {\n  return is$typed(v, id, hashRelatedAccount)\n}\n\nexport function validateRelatedAccount<V>(v: V) {\n  return validate<RelatedAccount & V>(v, id, hashRelatedAccount)\n}\n"]}