{"version":3,"file":"listConvos.js","sourceRoot":"","sources":["../../../../../../src/client/types/chat/bsky/convo/listConvos.ts"],"names":[],"mappings":";;AA0CA,gCAEC;AAtCD,mDAA4D;AAC5D,2CAIyB;AAGzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,4BAA4B,CAAA;AA0BvC,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.listConvos'\n\nexport type QueryParams = {\n  limit?: number\n  cursor?: string\n  readState?: 'unread' | (string & {})\n  status?: 'request' | 'accepted' | (string & {})\n}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  convos: ChatBskyConvoDefs.ConvoView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"]}