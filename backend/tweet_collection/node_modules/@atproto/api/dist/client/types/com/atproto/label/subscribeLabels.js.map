{"version":3,"file":"subscribeLabels.js","sourceRoot":"","sources":["../../../../../../src/client/types/com/atproto/label/subscribeLabels.ts"],"names":[],"mappings":";;AA0BA,4BAEC;AAED,wCAEC;AAUD,wBAEC;AAED,oCAEC;AA1CD,mDAA4D;AAC5D,2CAIyB;AAGzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,mCAAmC,CAAA;AAQ9C,MAAM,UAAU,GAAG,QAAQ,CAAA;AAE3B,SAAgB,QAAQ,CAAI,CAAI;IAC9B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,CAAA;AACpC,CAAC;AAED,SAAgB,cAAc,CAAI,CAAI;IACpC,OAAO,QAAQ,CAAa,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,CAAA;AAChD,CAAC;AAQD,MAAM,QAAQ,GAAG,MAAM,CAAA;AAEvB,SAAgB,MAAM,CAAI,CAAI;IAC5B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAA;AAClC,CAAC;AAED,SAAgB,YAAY,CAAI,CAAI;IAClC,OAAO,QAAQ,CAAW,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAA;AAC5C,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as ComAtprotoLabelDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.label.subscribeLabels'\n\nexport interface Labels {\n  $type?: 'com.atproto.label.subscribeLabels#labels'\n  seq: number\n  labels: ComAtprotoLabelDefs.Label[]\n}\n\nconst hashLabels = 'labels'\n\nexport function isLabels<V>(v: V) {\n  return is$typed(v, id, hashLabels)\n}\n\nexport function validateLabels<V>(v: V) {\n  return validate<Labels & V>(v, id, hashLabels)\n}\n\nexport interface Info {\n  $type?: 'com.atproto.label.subscribeLabels#info'\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n}\n\nconst hashInfo = 'info'\n\nexport function isInfo<V>(v: V) {\n  return is$typed(v, id, hashInfo)\n}\n\nexport function validateInfo<V>(v: V) {\n  return validate<Info & V>(v, id, hashInfo)\n}\n"]}