{"version":3,"file":"util.js","sourceRoot":"","sources":["../../src/moderation/util.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AppBskyEmbedRecord,\n  AppBskyEmbedRecordWithMedia,\n  AppBskyLabelerDefs,\n  ComAtprotoLabelDefs,\n} from '../client'\nimport { asPredicate } from '../client/util'\nimport {\n  InterpretedLabelValueDefinition,\n  LabelPreference,\n  LabelValueDefinitionFlag,\n  ModerationBehavior,\n} from './types'\n\nexport function isQuotedPost(embed: unknown): embed is AppBskyEmbedRecord.View {\n  return Boolean(embed && AppBskyEmbedRecord.isView(embed))\n}\n\nexport function isQuotedPostWithMedia(\n  embed: unknown,\n): embed is AppBskyEmbedRecordWithMedia.View {\n  return Boolean(embed && AppBskyEmbedRecordWithMedia.isView(embed))\n}\n\nexport function interpretLabelValueDefinition(\n  def: ComAtprotoLabelDefs.LabelValueDefinition,\n  definedBy: string | undefined,\n): InterpretedLabelValueDefinition {\n  const behaviors: {\n    account: ModerationBehavior\n    profile: ModerationBehavior\n    content: ModerationBehavior\n  } = {\n    account: {},\n    profile: {},\n    content: {},\n  }\n  const alertOrInform: 'alert' | 'inform' | undefined =\n    def.severity === 'alert'\n      ? 'alert'\n      : def.severity === 'inform'\n        ? 'inform'\n        : undefined\n  if (def.blurs === 'content') {\n    // target=account, blurs=content\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.contentList = 'blur'\n    behaviors.account.contentView = def.adultOnly ? 'blur' : alertOrInform\n    // target=profile, blurs=content\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    // target=content, blurs=content\n    behaviors.content.contentList = 'blur'\n    behaviors.content.contentView = def.adultOnly ? 'blur' : alertOrInform\n  } else if (def.blurs === 'media') {\n    // target=account, blurs=media\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.avatar = 'blur'\n    behaviors.account.banner = 'blur'\n    // target=profile, blurs=media\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    behaviors.profile.avatar = 'blur'\n    behaviors.profile.banner = 'blur'\n    // target=content, blurs=media\n    behaviors.content.contentMedia = 'blur'\n  } else if (def.blurs === 'none') {\n    // target=account, blurs=none\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.contentList = alertOrInform\n    behaviors.account.contentView = alertOrInform\n    // target=profile, blurs=none\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    // target=content, blurs=none\n    behaviors.content.contentList = alertOrInform\n    behaviors.content.contentView = alertOrInform\n  }\n\n  let defaultSetting: LabelPreference = 'warn'\n  if (def.defaultSetting === 'hide' || def.defaultSetting === 'ignore') {\n    defaultSetting = def.defaultSetting as LabelPreference\n  }\n\n  const flags: LabelValueDefinitionFlag[] = ['no-self']\n  if (def.adultOnly) {\n    flags.push('adult')\n  }\n\n  return {\n    ...def,\n    definedBy,\n    configurable: true,\n    defaultSetting,\n    flags,\n    behaviors,\n  }\n}\n\nexport function interpretLabelValueDefinitions(\n  labelerView: AppBskyLabelerDefs.LabelerViewDetailed,\n): InterpretedLabelValueDefinition[] {\n  return (labelerView.policies?.labelValueDefinitions || [])\n    .filter(asPredicate(ComAtprotoLabelDefs.validateLabelValueDefinition))\n    .map((labelValDef) =>\n      interpretLabelValueDefinition(labelValDef, labelerView.creator.did),\n    )\n}\n"]}