{"version":3,"file":"getActorMetadata.js","sourceRoot":"","sources":["../../../../../../src/client/types/chat/bsky/moderation/getActorMetadata.ts"],"names":[],"mappings":";;AAuCA,gCAEC;AAYD,gCAEC;AAED,4CAEC;AArDD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,uCAAuC,CAAA;AAwBlD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAUD,MAAM,YAAY,GAAG,UAAU,CAAA;AAE/B,SAAgB,UAAU,CAAI,CAAI;IAChC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,YAAY,CAAC,CAAA;AACtC,CAAC;AAED,SAAgB,gBAAgB,CAAI,CAAI;IACtC,OAAO,QAAQ,CAAe,CAAC,EAAE,EAAE,EAAE,YAAY,CAAC,CAAA;AACpD,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.moderation.getActorMetadata'\n\nexport type QueryParams = {\n  actor: string\n}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  day: Metadata\n  month: Metadata\n  all: Metadata\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Metadata {\n  $type?: 'chat.bsky.moderation.getActorMetadata#metadata'\n  messagesSent: number\n  messagesReceived: number\n  convos: number\n  convosStarted: number\n}\n\nconst hashMetadata = 'metadata'\n\nexport function isMetadata<V>(v: V) {\n  return is$typed(v, id, hashMetadata)\n}\n\nexport function validateMetadata<V>(v: V) {\n  return validate<Metadata & V>(v, id, hashMetadata)\n}\n"]}