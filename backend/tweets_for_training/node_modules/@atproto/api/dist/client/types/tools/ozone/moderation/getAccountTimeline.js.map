{"version":3,"file":"getAccountTimeline.js","sourceRoot":"","sources":["../../../../../../src/client/types/tools/ozone/moderation/getAccountTimeline.ts"],"names":[],"mappings":";;;AA2CA,gCAMC;AAUD,wCAEC;AAED,oDAEC;AA2CD,sDAEC;AAED,kEAEC;AAlHD;;GAEG;AACH,wCAAqD;AAGrD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,2CAA2C,CAAA;AAsBtD,MAAa,iBAAkB,SAAQ,gBAAS;IAC9C,YAAY,GAAc;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,8CAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,gBAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc;YAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,MAAM,gBAAgB,GAAG,cAAc,CAAA;AAEvC,SAAgB,cAAc,CAAI,CAAI;IACpC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,gBAAgB,CAAC,CAAA;AAC1C,CAAC;AAED,SAAgB,oBAAoB,CAAI,CAAI;IAC1C,OAAO,QAAQ,CAAmB,CAAC,EAAE,EAAE,EAAE,gBAAgB,CAAC,CAAA;AAC5D,CAAC;AAyCD,MAAM,uBAAuB,GAAG,qBAAqB,CAAA;AAErD,SAAgB,qBAAqB,CAAI,CAAI;IAC3C,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAA;AACjD,CAAC;AAED,SAAgB,2BAA2B,CAAI,CAAI;IACjD,OAAO,QAAQ,CAA0B,CAAC,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAA;AAC1E,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.getAccountTimeline'\n\nexport type QueryParams = {\n  did: string\n}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  timeline: TimelineItem[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n\n  return e\n}\n\nexport interface TimelineItem {\n  $type?: 'tools.ozone.moderation.getAccountTimeline#timelineItem'\n  day: string\n  summary: TimelineItemSummary[]\n}\n\nconst hashTimelineItem = 'timelineItem'\n\nexport function isTimelineItem<V>(v: V) {\n  return is$typed(v, id, hashTimelineItem)\n}\n\nexport function validateTimelineItem<V>(v: V) {\n  return validate<TimelineItem & V>(v, id, hashTimelineItem)\n}\n\nexport interface TimelineItemSummary {\n  $type?: 'tools.ozone.moderation.getAccountTimeline#timelineItemSummary'\n  eventSubjectType: 'account' | 'record' | 'chat' | (string & {})\n  eventType:\n    | 'tools.ozone.moderation.defs#modEventTakedown'\n    | 'tools.ozone.moderation.defs#modEventReverseTakedown'\n    | 'tools.ozone.moderation.defs#modEventComment'\n    | 'tools.ozone.moderation.defs#modEventReport'\n    | 'tools.ozone.moderation.defs#modEventLabel'\n    | 'tools.ozone.moderation.defs#modEventAcknowledge'\n    | 'tools.ozone.moderation.defs#modEventEscalate'\n    | 'tools.ozone.moderation.defs#modEventMute'\n    | 'tools.ozone.moderation.defs#modEventUnmute'\n    | 'tools.ozone.moderation.defs#modEventMuteReporter'\n    | 'tools.ozone.moderation.defs#modEventUnmuteReporter'\n    | 'tools.ozone.moderation.defs#modEventEmail'\n    | 'tools.ozone.moderation.defs#modEventResolveAppeal'\n    | 'tools.ozone.moderation.defs#modEventDivert'\n    | 'tools.ozone.moderation.defs#modEventTag'\n    | 'tools.ozone.moderation.defs#accountEvent'\n    | 'tools.ozone.moderation.defs#identityEvent'\n    | 'tools.ozone.moderation.defs#recordEvent'\n    | 'tools.ozone.moderation.defs#modEventPriorityScore'\n    | 'tools.ozone.moderation.defs#revokeAccountCredentialsEvent'\n    | 'tools.ozone.moderation.defs#ageAssuranceEvent'\n    | 'tools.ozone.moderation.defs#ageAssuranceOverrideEvent'\n    | 'tools.ozone.moderation.defs#timelineEventPlcCreate'\n    | 'tools.ozone.moderation.defs#timelineEventPlcOperation'\n    | 'tools.ozone.moderation.defs#timelineEventPlcTombstone'\n    | 'tools.ozone.hosting.getAccountHistory#accountCreated'\n    | 'tools.ozone.hosting.getAccountHistory#emailConfirmed'\n    | 'tools.ozone.hosting.getAccountHistory#passwordUpdated'\n    | 'tools.ozone.hosting.getAccountHistory#handleUpdated'\n    | 'tools.ozone.moderation.defs#scheduleTakedownEvent'\n    | 'tools.ozone.moderation.defs#cancelScheduledTakedownEvent'\n    | (string & {})\n  count: number\n}\n\nconst hashTimelineItemSummary = 'timelineItemSummary'\n\nexport function isTimelineItemSummary<V>(v: V) {\n  return is$typed(v, id, hashTimelineItemSummary)\n}\n\nexport function validateTimelineItemSummary<V>(v: V) {\n  return validate<TimelineItemSummary & V>(v, id, hashTimelineItemSummary)\n}\n"]}