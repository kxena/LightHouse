{"version":3,"file":"signPlcOperation.js","sourceRoot":"","sources":["../../../../../../src/client/types/com/atproto/identity/signPlcOperation.ts"],"names":[],"mappings":";;AA8CA,gCAEC;AA1CD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,uCAAuC,CAAA;AA+BlD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.identity.signPlcOperation'\n\nexport type QueryParams = {}\n\nexport interface InputSchema {\n  /** A token received through com.atproto.identity.requestPlcOperationSignature */\n  token?: string\n  rotationKeys?: string[]\n  alsoKnownAs?: string[]\n  verificationMethods?: { [_ in string]: unknown }\n  services?: { [_ in string]: unknown }\n}\n\nexport interface OutputSchema {\n  /** A signed DID PLC operation. */\n  operation: { [_ in string]: unknown }\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"]}