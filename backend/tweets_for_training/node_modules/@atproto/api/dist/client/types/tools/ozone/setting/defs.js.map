{"version":3,"file":"defs.js","sourceRoot":"","sources":["../../../../../../src/client/types/tools/ozone/setting/defs.ts"],"names":[],"mappings":";;AAqCA,4BAEC;AAED,wCAEC;AAtCD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,0BAA0B,CAAA;AAqBrC,MAAM,UAAU,GAAG,QAAQ,CAAA;AAE3B,SAAgB,QAAQ,CAAI,CAAI;IAC9B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,CAAA;AACpC,CAAC;AAED,SAAgB,cAAc,CAAI,CAAI;IACpC,OAAO,QAAQ,CAAa,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,CAAA;AAChD,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.setting.defs'\n\nexport interface Option {\n  $type?: 'tools.ozone.setting.defs#option'\n  key: string\n  did: string\n  value: { [_ in string]: unknown }\n  description?: string\n  createdAt?: string\n  updatedAt?: string\n  managerRole?:\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | 'tools.ozone.team.defs#roleAdmin'\n    | 'tools.ozone.team.defs#roleVerifier'\n    | (string & {})\n  scope: 'instance' | 'personal' | (string & {})\n  createdBy: string\n  lastUpdatedBy: string\n}\n\nconst hashOption = 'option'\n\nexport function isOption<V>(v: V) {\n  return is$typed(v, id, hashOption)\n}\n\nexport function validateOption<V>(v: V) {\n  return validate<Option & V>(v, id, hashOption)\n}\n"]}