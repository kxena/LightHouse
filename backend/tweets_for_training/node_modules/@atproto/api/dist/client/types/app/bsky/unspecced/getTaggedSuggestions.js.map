{"version":3,"file":"getTaggedSuggestions.js","sourceRoot":"","sources":["../../../../../../src/client/types/app/bsky/unspecced/getTaggedSuggestions.ts"],"names":[],"mappings":";;AAmCA,gCAEC;AAWD,oCAEC;AAED,gDAEC;AAhDD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,yCAAyC,CAAA;AAoBpD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AASD,MAAM,cAAc,GAAG,YAAY,CAAA;AAEnC,SAAgB,YAAY,CAAI,CAAI;IAClC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,cAAc,CAAC,CAAA;AACxC,CAAC;AAED,SAAgB,kBAAkB,CAAI,CAAI;IACxC,OAAO,QAAQ,CAAiB,CAAC,EAAE,EAAE,EAAE,cAAc,CAAC,CAAA;AACxD,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.getTaggedSuggestions'\n\nexport type QueryParams = {}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  suggestions: Suggestion[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Suggestion {\n  $type?: 'app.bsky.unspecced.getTaggedSuggestions#suggestion'\n  tag: string\n  subjectType: 'actor' | 'feed' | (string & {})\n  subject: string\n}\n\nconst hashSuggestion = 'suggestion'\n\nexport function isSuggestion<V>(v: V) {\n  return is$typed(v, id, hashSuggestion)\n}\n\nexport function validateSuggestion<V>(v: V) {\n  return validate<Suggestion & V>(v, id, hashSuggestion)\n}\n"]}