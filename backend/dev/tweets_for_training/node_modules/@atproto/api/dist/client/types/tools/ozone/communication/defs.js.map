{"version":3,"file":"defs.js","sourceRoot":"","sources":["../../../../../../src/client/types/tools/ozone/communication/defs.ts"],"names":[],"mappings":";;AAoCA,wCAEC;AAED,oDAEC;AArCD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,gCAAgC,CAAA;AAoB3C,MAAM,gBAAgB,GAAG,cAAc,CAAA;AAEvC,SAAgB,cAAc,CAAI,CAAI;IACpC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,gBAAgB,CAAC,CAAA;AAC1C,CAAC;AAED,SAAgB,oBAAoB,CAAI,CAAI;IAC1C,OAAO,QAAQ,CAAmB,CAAC,EAAE,EAAE,EAAE,gBAAgB,CAAC,CAAA;AAC5D,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.communication.defs'\n\nexport interface TemplateView {\n  $type?: 'tools.ozone.communication.defs#templateView'\n  id: string\n  /** Name of the template. */\n  name: string\n  /** Content of the template, can contain markdown and variable placeholders. */\n  subject?: string\n  /** Subject of the message, used in emails. */\n  contentMarkdown: string\n  disabled: boolean\n  /** Message language. */\n  lang?: string\n  /** DID of the user who last updated the template. */\n  lastUpdatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\nconst hashTemplateView = 'templateView'\n\nexport function isTemplateView<V>(v: V) {\n  return is$typed(v, id, hashTemplateView)\n}\n\nexport function validateTemplateView<V>(v: V) {\n  return validate<TemplateView & V>(v, id, hashTemplateView)\n}\n"]}