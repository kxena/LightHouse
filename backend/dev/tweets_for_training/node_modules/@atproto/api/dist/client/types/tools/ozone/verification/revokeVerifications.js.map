{"version":3,"file":"revokeVerifications.js","sourceRoot":"","sources":["../../../../../../src/client/types/tools/ozone/verification/revokeVerifications.ts"],"names":[],"mappings":";;AA8CA,gCAEC;AAaD,sCAEC;AAED,kDAEC;AA7DD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,8CAA8C,CAAA;AA+BzD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAWD,MAAM,eAAe,GAAG,aAAa,CAAA;AAErC,SAAgB,aAAa,CAAI,CAAI;IACnC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,eAAe,CAAC,CAAA;AACzC,CAAC;AAED,SAAgB,mBAAmB,CAAI,CAAI;IACzC,OAAO,QAAQ,CAAkB,CAAC,EAAE,EAAE,EAAE,eAAe,CAAC,CAAA;AAC1D,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.verification.revokeVerifications'\n\nexport type QueryParams = {}\n\nexport interface InputSchema {\n  /** Array of verification record uris to revoke */\n  uris: string[]\n  /** Reason for revoking the verification. This is optional and can be omitted if not needed. */\n  revokeReason?: string\n}\n\nexport interface OutputSchema {\n  /** List of verification uris successfully revoked */\n  revokedVerifications: string[]\n  /** List of verification uris that couldn't be revoked, including failure reasons */\n  failedRevocations: RevokeError[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\n/** Error object for failed revocations */\nexport interface RevokeError {\n  $type?: 'tools.ozone.verification.revokeVerifications#revokeError'\n  /** The AT-URI of the verification record that failed to revoke. */\n  uri: string\n  /** Description of the error that occurred during revocation. */\n  error: string\n}\n\nconst hashRevokeError = 'revokeError'\n\nexport function isRevokeError<V>(v: V) {\n  return is$typed(v, id, hashRevokeError)\n}\n\nexport function validateRevokeError<V>(v: V) {\n  return validate<RevokeError & V>(v, id, hashRevokeError)\n}\n"]}