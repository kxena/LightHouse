{"version":3,"file":"listMissingBlobs.js","sourceRoot":"","sources":["../../../../../../src/client/types/com/atproto/repo/listMissingBlobs.ts"],"names":[],"mappings":";;AAuCA,gCAEC;AAUD,oCAEC;AAED,gDAEC;AAnDD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,mCAAmC,CAAA;AAwB9C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,MAAM,cAAc,GAAG,YAAY,CAAA;AAEnC,SAAgB,YAAY,CAAI,CAAI;IAClC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,cAAc,CAAC,CAAA;AACxC,CAAC;AAED,SAAgB,kBAAkB,CAAI,CAAI;IACxC,OAAO,QAAQ,CAAiB,CAAC,EAAE,EAAE,EAAE,cAAc,CAAC,CAAA;AACxD,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.listMissingBlobs'\n\nexport type QueryParams = {\n  limit?: number\n  cursor?: string\n}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  blobs: RecordBlob[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface RecordBlob {\n  $type?: 'com.atproto.repo.listMissingBlobs#recordBlob'\n  cid: string\n  recordUri: string\n}\n\nconst hashRecordBlob = 'recordBlob'\n\nexport function isRecordBlob<V>(v: V) {\n  return is$typed(v, id, hashRecordBlob)\n}\n\nexport function validateRecordBlob<V>(v: V) {\n  return validate<RecordBlob & V>(v, id, hashRecordBlob)\n}\n"]}