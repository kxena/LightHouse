{"version":3,"file":"querySets.js","sourceRoot":"","sources":["../../../../../../src/client/types/tools/ozone/set/querySets.ts"],"names":[],"mappings":";;AA4CA,gCAEC;AAxCD,mDAA4D;AAC5D,2CAIyB;AAGzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,2BAA2B,CAAA;AA4BtC,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as ToolsOzoneSetDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.set.querySets'\n\nexport type QueryParams = {\n  limit?: number\n  cursor?: string\n  namePrefix?: string\n  sortBy?: 'name' | 'createdAt' | 'updatedAt'\n  /** Defaults to ascending order of name field. */\n  sortDirection?: 'asc' | 'desc'\n}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  sets: ToolsOzoneSetDefs.SetView[]\n  cursor?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"]}