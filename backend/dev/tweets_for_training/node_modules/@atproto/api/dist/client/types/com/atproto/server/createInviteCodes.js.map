{"version":3,"file":"createInviteCodes.js","sourceRoot":"","sources":["../../../../../../src/client/types/com/atproto/server/createInviteCodes.ts"],"names":[],"mappings":";;AA0CA,gCAEC;AAUD,wCAEC;AAED,oDAEC;AAtDD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,sCAAsC,CAAA;AA2BjD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,MAAM,gBAAgB,GAAG,cAAc,CAAA;AAEvC,SAAgB,cAAc,CAAI,CAAI;IACpC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,gBAAgB,CAAC,CAAA;AAC1C,CAAC;AAED,SAAgB,oBAAoB,CAAI,CAAI;IAC1C,OAAO,QAAQ,CAAmB,CAAC,EAAE,EAAE,EAAE,gBAAgB,CAAC,CAAA;AAC5D,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.createInviteCodes'\n\nexport type QueryParams = {}\n\nexport interface InputSchema {\n  codeCount: number\n  useCount: number\n  forAccounts?: string[]\n}\n\nexport interface OutputSchema {\n  codes: AccountCodes[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface AccountCodes {\n  $type?: 'com.atproto.server.createInviteCodes#accountCodes'\n  account: string\n  codes: string[]\n}\n\nconst hashAccountCodes = 'accountCodes'\n\nexport function isAccountCodes<V>(v: V) {\n  return is$typed(v, id, hashAccountCodes)\n}\n\nexport function validateAccountCodes<V>(v: V) {\n  return validate<AccountCodes & V>(v, id, hashAccountCodes)\n}\n"]}