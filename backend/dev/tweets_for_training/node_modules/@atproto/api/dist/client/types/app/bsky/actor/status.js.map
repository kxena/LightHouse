{"version":3,"file":"status.js","sourceRoot":"","sources":["../../../../../../src/client/types/app/bsky/actor/status.ts"],"names":[],"mappings":";;;AA8BA,4BAEC;AAED,wCAEC;AA/BD,mDAA4D;AAC5D,2CAIyB;AAGzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,uBAAuB,CAAA;AAalC,MAAM,UAAU,GAAG,MAAM,CAAA;AAEzB,SAAgB,QAAQ,CAAI,CAAI;IAC9B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,CAAA;AACpC,CAAC;AAED,SAAgB,cAAc,CAAI,CAAI;IACpC,OAAO,QAAQ,CAAa,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,CAAA;AACtD,CAAC;AAED,gEAAgE;AACnD,QAAA,IAAI,GAAG,GAAG,EAAE,OAAO,CAAA","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\nimport type * as AppBskyEmbedExternal from '../embed/external.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.status'\n\nexport interface Record {\n  $type: 'app.bsky.actor.status'\n  /** The status for the account. */\n  status: 'app.bsky.actor.status#live' | (string & {})\n  embed?: $Typed<AppBskyEmbedExternal.Main> | { $type: string }\n  /** The duration of the status in minutes. Applications can choose to impose minimum and maximum limits. */\n  durationMinutes?: number\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n\n/** Advertises an account as currently offering live content. */\nexport const LIVE = `${id}#live`\n"]}