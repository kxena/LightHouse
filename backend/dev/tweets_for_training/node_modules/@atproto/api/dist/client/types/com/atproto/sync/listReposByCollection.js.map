{"version":3,"file":"listReposByCollection.js","sourceRoot":"","sources":["../../../../../../src/client/types/com/atproto/sync/listReposByCollection.ts"],"names":[],"mappings":";;AAyCA,gCAEC;AASD,wBAEC;AAED,oCAEC;AApDD,mDAA4D;AAC5D,2CAIyB;AAEzB,MAAM,QAAQ,GAAG,eAAS,EACxB,QAAQ,GAAG,mBAAS,CAAA;AACtB,MAAM,EAAE,GAAG,wCAAwC,CAAA;AA0BnD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAOD,MAAM,QAAQ,GAAG,MAAM,CAAA;AAEvB,SAAgB,MAAM,CAAI,CAAI;IAC5B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAA;AAClC,CAAC;AAED,SAAgB,YAAY,CAAI,CAAI;IAClC,OAAO,QAAQ,CAAW,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAA;AAC5C,CAAC","sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { type ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport {\n  type $Typed,\n  is$typed as _is$typed,\n  type OmitKey,\n} from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.listReposByCollection'\n\nexport type QueryParams = {\n  collection: string\n  /** Maximum size of response set. Recommend setting a large maximum (1000+) when enumerating large DID lists. */\n  limit?: number\n  cursor?: string\n}\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: Repo[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Repo {\n  $type?: 'com.atproto.sync.listReposByCollection#repo'\n  did: string\n}\n\nconst hashRepo = 'repo'\n\nexport function isRepo<V>(v: V) {\n  return is$typed(v, id, hashRepo)\n}\n\nexport function validateRepo<V>(v: V) {\n  return validate<Repo & V>(v, id, hashRepo)\n}\n"]}