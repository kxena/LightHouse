{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/moderation/types.ts"],"names":[],"mappings":";;;AAWA,SAAS;AACT,IAAI;AAES,QAAA,qBAAqB,GAAG,WAAW,CAAA;AAenC,QAAA,cAAc,GAAuB;IAChD,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,OAAO;IACpB,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,MAAM;IACd,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,MAAM;CACpB,CAAA;AACY,QAAA,aAAa,GAAuB;IAC/C,WAAW,EAAE,QAAQ;IACrB,WAAW,EAAE,OAAO;IACpB,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,QAAQ;CACtB,CAAA;AACY,QAAA,iBAAiB,GAAuB;IACnD,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,MAAM;CACpB,CAAA;AACY,QAAA,aAAa,GAAuB;IAC/C,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,MAAM;CACpB,CAAA;AACY,QAAA,aAAa,GAAuB,EAAE,CAAA","sourcesContent":["import {\n  AppBskyActorDefs,\n  AppBskyFeedDefs,\n  AppBskyGraphDefs,\n  AppBskyNotificationListNotifications,\n  ChatBskyActorDefs,\n  ComAtprotoLabelDefs,\n} from '../client/index'\nimport { KnownLabelValue } from './const/labels'\nimport { MuteWordMatch } from './mutewords'\n\n// syntax\n// =\n\nexport const CUSTOM_LABEL_VALUE_RE = /^[a-z-]+$/\n\n// behaviors\n// =\n\nexport interface ModerationBehavior {\n  profileList?: 'blur' | 'alert' | 'inform'\n  profileView?: 'blur' | 'alert' | 'inform'\n  avatar?: 'blur' | 'alert'\n  banner?: 'blur'\n  displayName?: 'blur'\n  contentList?: 'blur' | 'alert' | 'inform'\n  contentView?: 'blur' | 'alert' | 'inform'\n  contentMedia?: 'blur'\n}\nexport const BLOCK_BEHAVIOR: ModerationBehavior = {\n  profileList: 'blur',\n  profileView: 'alert',\n  avatar: 'blur',\n  banner: 'blur',\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const MUTE_BEHAVIOR: ModerationBehavior = {\n  profileList: 'inform',\n  profileView: 'alert',\n  contentList: 'blur',\n  contentView: 'inform',\n}\nexport const MUTEWORD_BEHAVIOR: ModerationBehavior = {\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const HIDE_BEHAVIOR: ModerationBehavior = {\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const NOOP_BEHAVIOR: ModerationBehavior = {}\n\n// labels\n// =\n\nexport type Label = ComAtprotoLabelDefs.Label\nexport type LabelTarget = 'account' | 'profile' | 'content'\nexport type LabelPreference = 'ignore' | 'warn' | 'hide'\n\nexport type LabelValueDefinitionFlag =\n  | 'no-override'\n  | 'adult'\n  | 'unauthed'\n  | 'no-self'\n\nexport interface InterpretedLabelValueDefinition\n  extends ComAtprotoLabelDefs.LabelValueDefinition {\n  definedBy?: string | undefined // did of labeler or undefined for global\n  configurable: boolean\n  defaultSetting: LabelPreference // type narrowing\n  flags: LabelValueDefinitionFlag[]\n  behaviors: {\n    account?: ModerationBehavior\n    profile?: ModerationBehavior\n    content?: ModerationBehavior\n  }\n}\n\nexport type LabelDefinitionMap = Record<\n  KnownLabelValue,\n  InterpretedLabelValueDefinition\n>\n\n// subjects\n// =\n\nexport type ModerationSubjectProfile =\n  | AppBskyActorDefs.ProfileViewBasic\n  | AppBskyActorDefs.ProfileView\n  | AppBskyActorDefs.ProfileViewDetailed\n  | ChatBskyActorDefs.ProfileViewBasic\n\nexport type ModerationSubjectPost = AppBskyFeedDefs.PostView\n\nexport type ModerationSubjectNotification =\n  AppBskyNotificationListNotifications.Notification\n\nexport type ModerationSubjectFeedGenerator = AppBskyFeedDefs.GeneratorView\n\nexport type ModerationSubjectUserList =\n  | AppBskyGraphDefs.ListViewBasic\n  | AppBskyGraphDefs.ListView\n\nexport type ModerationSubject =\n  | ModerationSubjectProfile\n  | ModerationSubjectPost\n  | ModerationSubjectNotification\n  | ModerationSubjectFeedGenerator\n  | ModerationSubjectUserList\n\n// behaviors\n// =\n\nexport type ModerationCauseSource =\n  | { type: 'user' }\n  | { type: 'list'; list: AppBskyGraphDefs.ListViewBasic }\n  | { type: 'labeler'; did: string }\n\nexport type ModerationCause =\n  | {\n      type: 'blocking'\n      source: ModerationCauseSource\n      priority: 3\n      downgraded?: boolean\n    }\n  | {\n      type: 'blocked-by'\n      source: ModerationCauseSource\n      priority: 4\n      downgraded?: boolean\n    }\n  | {\n      type: 'block-other'\n      source: ModerationCauseSource\n      priority: 4\n      downgraded?: boolean\n    }\n  | {\n      type: 'label'\n      source: ModerationCauseSource\n      label: Label\n      labelDef: InterpretedLabelValueDefinition\n      target: LabelTarget\n      setting: LabelPreference\n      behavior: ModerationBehavior\n      noOverride: boolean\n      priority: 1 | 2 | 5 | 7 | 8\n      downgraded?: boolean\n    }\n  | {\n      type: 'muted'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n  | {\n      type: 'mute-word'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n      matches: MuteWordMatch[]\n    }\n  | {\n      type: 'hidden'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n\nexport interface ModerationPrefsLabeler {\n  did: string\n  labels: Record<string, LabelPreference>\n}\n\nexport interface ModerationPrefs {\n  adultContentEnabled: boolean\n  labels: Record<string, LabelPreference>\n  labelers: ModerationPrefsLabeler[]\n  mutedWords: AppBskyActorDefs.MutedWord[]\n  hiddenPosts: string[]\n}\n\nexport interface ModerationOpts {\n  userDid: string | undefined\n  prefs: ModerationPrefs\n  /**\n   * Map of labeler did -> custom definitions\n   */\n  labelDefs?: Record<string, InterpretedLabelValueDefinition[]>\n}\n"]}